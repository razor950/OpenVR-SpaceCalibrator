# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: MSBuild

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

  PLATFORM_CONFIGURATION: x64

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
      with:
        # Fetches all commits for the ref and submodules. Set to 'true' to checkout submodules.
        submodules: 'true'

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      # Added /p:Platform=x64 to specify the target platform as x64.
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:Platform=${{env.PLATFORM_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

    - name: Set short SHA
      run: echo "SHORT_SHA=$(echo ${{ github.sha }}.Substring(0,7))" | Out-File -FilePath $env:GITHUB_ENV -Append
      shell: powershell

    - name: Zip artifacts
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: Compress-Archive -Path "x64/${{env.BUILD_CONFIGURATION}}" -DestinationPath "ovr-sc_${{ env.SHORT_SHA }}_dev.zip"

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        prerelease: true
        tag_name: dev
        files: |
          ovr-sc_${{ env.SHORT_SHA }}_dev.zip